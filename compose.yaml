services:

  postgres:
    image: postgres:16
    container_name: rtap-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: analytics
    ports:
      - "5432:5432"
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/001-schema.sql
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: rtap-redis
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rtap-backend
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/analytics
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_SHOW_SQL: "false"
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"

  pipeline:
    build:
      context: ./pipeline
      dockerfile: Dockerfile
    container_name: rtap-pipeline
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_NAME: analytics
      DB_USER: postgres
      DB_PASSWORD: postgres
      PYTHONUNBUFFERED: "1"        # ← add this
    command: ["python","-u","-m","app.main"]   # ← add -u
  prometheus:
    image: prom/prometheus:v2.55.0
    container_name: rtap-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    depends_on:
      - backend
      - pipeline

  grafana:
    image: grafana/grafana:10.4.6
    container_name: rtap-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  pgdata:
